source("https://raw.github.com/TheJacksonLaboratory/ClimbR/master/getToken.R")
library(jsonlite)
fromJSON("swagger.json")
sj <- fromJSON("swagger.json", simplifyDataFrame = TRUE)
View(sj)
sch <- sj$components$schemas
View(sch)
res <- do.call(rbind.data.frame,
lapply((sch)[[1]], `[`, c("properties")))
do.call(rbind.data.frame,
lapply((sch)[[1]], `[`, c("properties")))
flt <- flatten(sch)
lapply((sch)[[1]], `[[`, c("properties"))
lapply((sch)[[2]], `[`, c("properties"))
lapply((sch)[[3]], `[`, c("properties"))
lapply(sch, `[`, c("properties")
)
lapply(sch, `[[`, c("properties")
)
ll <- lapply(sch, `[[`, c("properties"))
rm(ll)
flt <- sch %>%
tibble::enframe() %>%
unnest_wider(value)
dc <- do.call(rbind.data.frame,
lapply(sch, `[`, c("properties")))
dc <- do.call(rbind,
lapply(sch, `[`, c("properties")))
View(dc)
dc$housing
dc$Housing
dc <- do.call(list,
lapply(sch, `[`, c("properties")))
dc <- do.call(as.data.frame,
lapply(sch, `[`, c("properties")))
do.call(rbind, dc)
do.call(as.data.frame, dc)
dcc <- do.call(list,
lapply(dc, `[`, c("properties")))
View(dcc)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
system("arch")
library(tidyselect)
detach("package:tidyverse", unload = TRUE)
library(tidytree)
library(tidyr)
library(broom)
library(rlang)
install.packages("tidyverse")
library(tidytree)
library(tidyverse)
detach("package:tidytree", unload = TRUE)
detach("package:tidyverse", unload = TRUE)
library(abind)
library(acepack)
